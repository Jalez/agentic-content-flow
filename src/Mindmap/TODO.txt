Mindmap Component TODOs:

[ ] 1. Search/Filter functionality:
    - Add a search bar to filter nodes by label or content
    - Highlight matching nodes when searching
    - Option to show only matching nodes and their direct connections

[ ] 2. Node styling improvements:
    - Add different node shapes for different types of content
    - Support for custom icons in nodes
    - Visual indicators for node relationships
    - Color coding based on difficulty level or category

[ ] 3. Navigation enhancements:
    - Add mini-map for easier navigation in large mindmaps
    - Zoom to fit all nodes button
    - Center on selected node
    - Keyboard shortcuts for common actions
    - Improved pan and zoom controls for touch devices

[x] 4. Layout improvements:
    - Auto-arrange nodes to prevent overlapping ✓
    - Different layout algorithms (hierarchical, radial, force-directed) ✓
    - Snap-to-grid option ✓
    - Ability to group nodes into collapsible clusters ✓
    - Add visible grid and other visual elements ✓

[ ] 5. Enhanced node content:
    - Rich text formatting in node details
    - Support for embedding images and links
    - Ability to attach files to nodes
    - Mathematical formula support
    - Code snippet support with syntax highlighting

New UnifiedControls:
- Create and include a new Delete component as a button to the mindmap controls to delete an item. (look at useNodeOperations.ts, use its delete logic) Essentially, the button should only work if there is a selected item, and when clicked, it should indeed delete that selected item. React flow should allow you to know if an item is selected or not. 
- Design a new revert Control component and implement it. Revert should allow you to revert the last action that the user did in the mindmap, whether it's renaming a node, removing a node, removing an edge, etc. 


[ ] 7. Integration features:
    - Link nodes to course materials
    - Integration with calendar for timeline view
    - Connection to learning management system
    - API for external tools to modify the mindmap

Lower priority: 
[ ] 6. Accessibility improvements:
    - Keyboard navigation between nodes
    - Screen reader support
    - High contrast mode
    - Configurable node sizes and font sizes

Let's implement these features one by one, waiting for approval before moving to the next one.